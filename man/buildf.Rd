% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/main.R
\name{buildf}
\alias{buildf}
\title{Build Density}
\usage{
buildf(margins, copula, alphaIdcs = NULL)
}
\arguments{
\item{margins}{either \itemize{
\item \code{function(y, theta, ...)}, where \code{theta} is a list of parameters.
It shall return a matrix with densities in the first column and cumulative densities in the second.
\item list of expressions each of which contains the PDF and CDF accessible by \code{$pdf} and \code{$cdf}.
See examples below.
}}

\item{copula}{a copula object from package \pkg{copula}.}

\item{alphaIdcs}{an integer vector specifying the positions of copula parameters in \code{theta}.
Irrelevant if \code{margins} is a list.}
}
\value{
\code{buildf} returns either \itemize{
\item \code{function(y, theta, ...)}, the joint PDF, if \code{margins} is a function.
\item the joint PDF as an expression built upon the copula PDF, the marginal PDFs and CDFs, otherwise.
}
}
\description{
\code{buildf} builds an object that evaluates to the density of a random vector given the marginal distributions and some copula.
}
\details{
If \code{buildf} should build an expression, the copula needs to contain the probability density as an expression.
Note also that there is no check whether or not the final expression is valid.
}
\examples{
library(docopulae)
library(copula)
library(mvtnorm)

## build bivariate normal pdf
margins = function(y, theta) {
    mu = c(theta$mu1, theta$mu2)
    cbind(dnorm(y, mu), pnorm(y, mu))
}
C = copula::normalCopula()

f = buildf(margins, C, 'alpha')

## plot density
theta = list(mu1=2, mu2=-3, alpha=0.4)
y1 = seq(0, 4, length.out=51)
y2 = seq(-5, -1, length.out=51)
z = outer(y1, y2, function(y1, y2) apply(cbind(y1, y2), 1, f, theta))
contour(y1, y2, z)

## add theoretical density
C@parameters = theta$alpha
zz = outer(y1, y2,
    function(y1, y2) dmvnorm(cbind(y1 - theta$mu1, y2 - theta$mu2),
                             sigma=getSigma(C)))
contour(y1, y2, zz, col='red', add=TRUE)

## build bivariate pdf with normal margins and clayton copula
margins = list(alist(pdf=dnorm(y1, mu1, 1),
                     cdf=pnorm(y1, mu1, 1)),
               alist(pdf=dnorm(y2, mu2, 1),
                     cdf=pnorm(y2, mu2, 1)))
C = claytonCopula()
f1 = buildf(margins, C)
f1

f2 = buildf(function(y, theta) {
    mu = c(theta$mu1, theta$mu2)
    cbind(dnorm(y, mu, 1), pnorm(y, mu, 1))
}, C, 'alpha')

## plot both densities
theta = list(mu1=2, mu2=-3, alpha=2) # tau = 0.5
y1 = seq(0, 4, length.out=51)
y2 = seq(-5, -1, length.out=51)
z = outer(y1, y2, function(y1, y2) {
    apply(cbind(y1, y2), 1, function(y) {
        eval(f1, list(y1=y[1], y2=y[2],
                      mu1=theta$mu1, mu2=theta$mu2, alpha=theta$alpha))
    })
})
contour(y1, y2, z)

zz = outer(y1, y2, function(y1, y2) apply(cbind(y1, y2), 1, f2, theta))
contour(y1, y2, zz, col='red', add=TRUE)
}
\seealso{
\pkg{copula}, \code{\link{expr2f}}, \code{\link{fisherI}}, \code{\link{numDerivLogf}}, \code{\link{DerivLogf}}
}

